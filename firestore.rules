rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Enforces user-ownership for /users/{userId} documents.
     * @path /users/{userId}
     * @allow (create) - Authenticated user with UID 'user_abc' can create a user document where userId == 'user_abc'.
     * @deny (create) - Authenticated user with UID 'user_xyz' cannot create a user document where userId == 'user_abc'.
     * @allow (get, update, delete) - Authenticated user with UID 'user_abc' can get, update, or delete their own user document (userId == 'user_abc').
     * @deny (get, update, delete) - Authenticated user with UID 'user_xyz' cannot get, update, or delete the user document of 'user_abc'.
     * @principle Enforces document ownership for all operations.  Validates that the authenticated user ID matches the document ID.
     */
    match /users/{userId} {
      function isOwner(userId) {
        return request.auth != null && request.auth.uid == userId;
      }

      function isSignedIn() {
        return request.auth != null;
      }

      allow get: if isOwner(userId);
      allow list: if false;
      allow create: if isSignedIn() && request.auth.uid == userId;
      allow update: if isOwner(userId);
      allow delete: if isOwner(userId);
    }

    /**
     * @description Enforces user-ownership for /users/{userId}/scans/{scanId} documents.
     * @path /users/{userId}/scans/{scanId}
     * @allow (create) - Authenticated user with UID 'user_abc' can create a scan document under their user document (userId == 'user_abc').
     * @deny (create) - Authenticated user with UID 'user_xyz' cannot create a scan document under user 'user_abc'.
     * @allow (get, list, update, delete) - Authenticated user with UID 'user_abc' can get, list, update, or delete scan documents under their user document (userId == 'user_abc'.
     * @deny (get, list, update, delete) - Authenticated user with UID 'user_xyz' cannot access scan documents under user 'user_abc'.
     * @principle Restricts access to scans to only the owning user.
     */
    match /users/{userId}/scans/{scanId} {
      function isOwner(userId) {
        return request.auth != null && request.auth.uid == userId;
      }

      allow get: if isOwner(userId);
      allow list: if isOwner(userId);
      allow create: if isOwner(userId);
      allow update: if isOwner(userId);
      allow delete: if isOwner(userId);
    }

    /**
     * @description Enforces user-ownership for /users/{userId}/scans/{scanId}/reports/{reportId} documents.
     * @path /users/{userId}/scans/{scanId}/reports/{reportId}
     * @allow (create) - Authenticated user with UID 'user_abc' can create a report document under their scan document (userId == 'user_abc').
     * @deny (create) - Authenticated user with UID 'user_xyz' cannot create a report document under user 'user_abc'.
     * @allow (get, list, update, delete) - Authenticated user with UID 'user_abc' can get, list, update, or delete report documents under their scan document (userId == 'user_abc').
     * @deny (get, list, update, delete) - Authenticated user with UID 'user_xyz' cannot access report documents under user 'user_abc'.
     * @principle Restricts access to reports to only the owning user.
     */
    match /users/{userId}/scans/{scanId}/reports/{reportId} {
      function isOwner(userId) {
        return request.auth != null && request.auth.uid == userId;
      }

      allow get: if isOwner(userId);
      allow list: if isOwner(userId);
      allow create: if isOwner(userId);
      allow update: if isOwner(userId);
      allow delete: if isOwner(userId);
    }

    /**
     * @description Enforces user-ownership for /users/{userId}/scans/{scanId}/reports/{reportId}/findings/{findingId} documents.
     * @path /users/{userId}/scans/{scanId}/reports/{reportId}/findings/{findingId}
     * @allow (create) - Authenticated user with UID 'user_abc' can create a finding document under their report document (userId == 'user_abc').
     * @deny (create) - Authenticated user with UID 'user_xyz' cannot create a finding document under user 'user_abc'.
     * @allow (get, list, update, delete) - Authenticated user with UID 'user_abc' can get, list, update, or delete finding documents under their report document (userId == 'user_abc').
     * @deny (get, list, update, delete) - Authenticated user with UID 'user_xyz' cannot access finding documents under user 'user_abc'.
     * @principle Restricts access to findings to only the owning user.
     */
    match /users/{userId}/scans/{scanId}/reports/{reportId}/findings/{findingId} {
      function isOwner(userId) {
        return request.auth != null && request.auth.uid == userId;
      }

      allow get: if isOwner(userId);
      allow list: if isOwner(userId);
      allow create: if isOwner(userId);
      allow update: if isOwner(userId);
      allow delete: if isOwner(userId);
    }
  }
}